{"version":3,"sources":["shared.styles.js","components/Header/Header.styles.js","components/Header/Header.js","components/Search/Search.styles.js","components/Search/SearchAPI.js","components/Search/Suggestions.js","app/WeatherSlice.js","components/Search/Search.js","components/Error/Error.styles.js","components/Error/Error.js","components/SearchResults/SearchResults.styles.js","components/WeatherCard/WeatherCard.styles.js","components/WeatherCard/WeatherCard.js","components/SearchResults/Next5Days.js","app/FavoritesSlice.js","components/SearchResults/Header.js","components/SearchResults/SearchResults.js","components/Favorites/Favorites.styles.js","components/Favorites/Card.js","components/Favorites/Favorites.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Button","styled","button","Container","section","HeaderWrapper","header","HeaderContainer","NavBar","nav","NavList","ol","NavItem","li","Header","exact","to","activeClassName","SearchWrapper","SearchInput","input","SuggestionsBox","ul","Suggestion","fetchCurrentWeather","locationId","fetch","process","then","result","ok","json","Error","catch","err","fetchNext5DaysWeather","fetchSuggestions","text","console","log","Suggestions","suggestions","setLocation","emptySuggestions","map","suggestion","onClick","current","value","LocalizedName","id","Key","name","weatherSlice","createSlice","initialState","weather","location","next5Days","currentWeather","reducers","changeLocation","state","action","payload","changeNext5Days","DailyForecasts","changeCurrentWeather","temperature","Temperature","Metric","Value","weatherText","WeatherText","actions","selectNext5Days","selectWeather","Search","errorHandler","useState","setSuggestions","searchInput","useRef","dispatch","useDispatch","a","message","handleError","e","preventDefault","filter","city","toLowerCase","target","onSubmit","type","placeholder","ref","onChange","_","debounce","ErrorContainer","errors","length","SearchResultsWrapper","SearchResultsHeader","SelectedResult","div","SelectedResultCard","Next5DaysSection","footer","Next5DaysList","Wrapper","Title","h3","WeatherCard","day","minimum","maximum","src","alt","height","byDay","byNight","formatTemperature","min","Minimum","max","Maximum","Unit","convertToC","F","toFixed","getDayOfWeek","date","dayOfWeek","Date","getDay","isNaN","Next5Days","useSelector","Day","IconPhrase","Night","favoritesSlice","favorites","changeFavorites","addFavorite","find","item","unshift","deleteFavorite","updateFavorites","Array","isArray","updateOneFavorite","ids","relevantPayload","includes","selectFavorites","isFavorite","isInFavorite","setIsInFavorite","useEffect","style","marginRight","SearchResults","CardsList","Card","h2","PageTitle","h1","place","Favorites","favorite","App","error","setError","setTimeout","getWeather","path","store","configureStore","reducer","weatherReducer","favoritesReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d84cb20.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 0.5rem;\n  background-color: #cba5fa;\n  border-radius: 3px;\n  border: none;\n  color: #673a9f;\n`;\n\nexport const Container = styled.section`\n  width: 80%;\n  margin: 0 auto;\n`;\n","import styled from 'styled-components';\nimport { Container as HeaderContainer } from '../../shared.styles';\n\nexport const HeaderWrapper = styled.header`\n  position: sticky;\n  top: 0;\n  padding: 0;\n\n  background-color: #cba5fa;\n  color: #fff;\n`;\n\nexport const Container = styled(HeaderContainer)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 0;\n`;\n\nexport const NavBar = styled.nav``;\n\nexport const NavList = styled.ol`\n  display: flex;\n  list-style-type: none;\n`;\n\nexport const NavItem = styled.li`\n  &:not(:first-child) {\n    margin-left: 1rem;\n  }\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  HeaderWrapper,\n  NavBar,\n  NavList,\n  NavItem,\n  Container,\n} from './Header.styles';\n\nfunction Header() {\n  return (\n    <HeaderWrapper>\n      <Container>\n        <h2>Herolo Weather Task</h2>\n        <NavBar>\n          <NavList>\n            <NavItem>\n              <NavLink exact to='/' activeClassName='selected'>\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to='/favorites' activeClassName='selected'>\n                Favorites\n              </NavLink>\n            </NavItem>\n          </NavList>\n        </NavBar>\n      </Container>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const SearchWrapper = styled.section`\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n\n  margin: 3rem auto;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 0.5rem;\n  border-radius: 3px;\n  border-color: #cba5fa;\n  margin-right: 0.5rem;\n  min-width: 25vw;\n`;\n\nexport const SuggestionsBox = styled.ul`\n  position: absolute;\n  top: 1.3rem;\n  list-style-type: none;\n  background: #fffa;\n  width: 25vw;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n`;\n\nexport const Suggestion = styled.li`\n  padding: 0.5rem;\n`;\n","export function fetchCurrentWeather(locationId) {\n  return fetch(\n    `http://dataservice.accuweather.com/currentconditions/v1/${locationId}?apikey=${process.env.REACT_APP_API_KEY}`,\n  )\n    .then((result) => {\n      if (result.ok) {\n        return result.json();\n      }\n\n      throw new Error('Could not fetch current weather.');\n    })\n    .catch((err) => {\n      throw new Error('Could not fetch current weather.');\n    });\n}\n\nexport function fetchNext5DaysWeather(locationId) {\n  return fetch(\n    `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationId}?apikey=${process.env.REACT_APP_API_KEY}`,\n  )\n    .then((result) => {\n      if (result.ok) {\n        return result.json();\n      }\n\n      throw new Error('Could not fetch the next 5 days weather.');\n    })\n    .catch((err) => {\n      throw new Error('Could not fetch the next 5 days weather.');\n    });\n}\n\nexport function fetchSuggestions(text) {\n  return fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${process.env.REACT_APP_API_KEY}&q=${text}\n`)\n    .then((result) => {\n      console.log(result);\n      if (result.ok) {\n        return result.json();\n      }\n\n      throw new Error('Could not fetch suggestions.');\n    })\n    .catch((err) => {\n      throw new Error('Could not fetch suggestions.');\n    });\n}\n","import React from 'react';\nimport { SuggestionsBox, Suggestion } from './Search.styles';\n\nfunction Suggestions({ suggestions, input, setLocation, emptySuggestions }) {\n  return (\n    !!suggestions && (\n      <SuggestionsBox>\n        {suggestions.map((suggestion) => (\n          <Suggestion\n            key={suggestion.Key}\n            onClick={() => {\n              input.current.value = suggestion.LocalizedName;\n              setLocation({\n                id: suggestion.Key,\n                name: suggestion.LocalizedName,\n              });\n              emptySuggestions();\n            }}\n          >\n            {suggestion.LocalizedName}\n          </Suggestion>\n        ))}\n      </SuggestionsBox>\n    )\n  );\n}\n\nexport default Suggestions;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  weather: {\n    location: {},\n    next5Days: [],\n    currentWeather: {},\n  },\n};\n\nexport const weatherSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    changeLocation: (state, action) => {\n      state.weather.location = action.payload;\n    },\n    changeNext5Days: (state, action) => {\n      state.weather.next5Days = action.payload.DailyForecasts;\n    },\n    changeCurrentWeather: (state, action) => {\n      if (state.weather.currentWeather)\n        state.weather.currentWeather = {\n          temperature: action.payload[0].Temperature.Metric.Value,\n          weatherText: action.payload[0].WeatherText,\n        };\n    },\n  },\n});\n\nexport const {\n  changeLocation,\n  changeNext5Days,\n  changeCurrentWeather,\n} = weatherSlice.actions;\n\nexport const selectCurrentWeather = (state) => {\n  return state.weather.weather.currentWeather;\n};\n\nexport const selectNext5Days = (state) => state.weather.weather.next5Days;\n\nexport const selectCurrentLocation = (state) => state.weather.weather.location;\n\nexport const selectWeather = (state) => state.weather.weather;\n\nexport default weatherSlice.reducer;\n","import React, { useState, useRef } from 'react';\nimport _ from 'lodash';\nimport { SearchWrapper, SearchInput } from './Search.styles';\nimport {\n  fetchSuggestions,\n  fetchNext5DaysWeather,\n  fetchCurrentWeather,\n} from './SearchAPI';\nimport { Button } from '../../shared.styles';\nimport Suggestions from './Suggestions';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeLocation,\n  changeNext5Days,\n  changeCurrentWeather,\n} from '../../app/WeatherSlice';\n\nfunction Search({ errorHandler }) {\n  const [suggestions, setSuggestions] = useState([]);\n  const [location, setLocation] = useState(null);\n  const searchInput = useRef(null);\n\n  const dispatch = useDispatch();\n\n  async function changeHandler() {\n    try {\n      const result = await fetchSuggestions(searchInput.current.value);\n      setSuggestions(result);\n    } catch (err) {\n      console.log(err.message);\n      handleError(err.message);\n    }\n  }\n\n  function handleError(message) {\n    setSuggestions([]);\n    errorHandler(message);\n  }\n\n  async function submitHandler(e) {\n    e.preventDefault();\n\n    if (location == null) {\n      setLocation({\n        id: suggestions.filter(\n          (city) =>\n            city.LocalizedName.toLowerCase() ===\n            e.target[0].value.toLowerCase(),\n        )[0]?.Key,\n        name: e.target[0].value,\n      });\n    }\n\n    if (location == null || location.id == null)\n      return handleError('Wrong search');\n\n    try {\n      const next5Days = await fetchNext5DaysWeather(location.id);\n      const currentWeather = await fetchCurrentWeather(location.id);\n\n      dispatch(changeLocation(location));\n      dispatch(changeNext5Days(next5Days));\n      dispatch(changeCurrentWeather(currentWeather));\n    } catch (e) {\n      handleError(e.message);\n    }\n\n    setSuggestions([]);\n    setLocation(null);\n  }\n\n  return (\n    <SearchWrapper>\n      <form onSubmit={submitHandler}>\n        <SearchInput\n          type='text'\n          placeholder='City'\n          ref={searchInput}\n          onChange={_.debounce(changeHandler, 1000)}\n        />\n        <Button>Check weather</Button>\n        <Suggestions\n          suggestions={suggestions}\n          input={searchInput}\n          setLocation={setLocation}\n          emptySuggestions={() => setSuggestions([])}\n        />\n      </form>\n    </SearchWrapper>\n  );\n}\n\nexport default Search;\n","import styled from 'styled-components';\nimport { Container } from '../../shared.styles';\n\nexport const ErrorContainer = styled(Container)`\n  background-color: #f7bcb4;\n  border: #f57a69;\n  color: #c23029;\n  border-radius: 3px;\n  padding: 1rem;\n`;\n","import React from 'react';\nimport { ErrorContainer } from './Error.styles';\n\nfunction Error({ errors }) {\n  return errors.length ? (\n    <ErrorContainer>Errors: {errors.map((err) => `${err} `)}</ErrorContainer>\n  ) : (\n    ''\n  );\n}\n\nexport default Error;\n","import styled from 'styled-components';\n\nexport const SearchResultsWrapper = styled.section`\n  margin: 0 auto;\n  width: 80%;\n  padding: 1.5rem 3rem;\n  background-color: #7b57ae;\n  color: #eaeaff;\n  border-radius: 3px;\n`;\n\nexport const SearchResultsHeader = styled.header`\n  text-align: center;\n`;\n\nexport const SelectedResult = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const SelectedResultCard = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Next5DaysSection = styled.footer`\n  margin-top: 2rem;\n`;\n\nexport const Next5DaysList = styled.ol`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 0;\n  list-style-type: none;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.li`\n  background-color: #673a9f;\n  text-align: center;\n  padding: 1rem;\n  min-width: calc(20% - 4rem);\n  border-radius: 3px;\n  margin-bottom: 1rem;\n`;\n\nexport const Title = styled.h3`\n  margin-top: 0;\n`;\n\nexport const WeatherText = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  text-align: center;\n\n  p {\n    padding: 0;\n    width: 100%;\n  }\n`;\n","import React from 'react';\nimport { Wrapper, Title, WeatherText } from './WeatherCard.styles';\n\nfunction WeatherCard({ day, temperature, weatherText }) {\n  return (\n    <Wrapper>\n      <Title>{day}</Title>\n      <span>\n        From {temperature.minimum}'C To {temperature.maximum}'C\n      </span>\n      <WeatherText>\n        <img\n          src='https://img.icons8.com/color/48/000000/smiling-sun.png'\n          alt='sun'\n          height='25px'\n        />\n        <p>{weatherText.byDay}</p>\n      </WeatherText>\n      <WeatherText>\n        <img\n          src='https://img.icons8.com/emoji/48/000000/full-moon-face.png'\n          alt='night'\n          height='25px'\n        />\n        <p>{weatherText.byNight}</p>\n      </WeatherText>\n    </Wrapper>\n  );\n}\n\nexport default WeatherCard;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectNext5Days } from '../../app/WeatherSlice';\nimport { Next5DaysSection, Next5DaysList } from './SearchResults.styles';\nimport WeatherCard from '../WeatherCard/WeatherCard';\n\nfunction Next5Days() {\n  const next5Days = useSelector(selectNext5Days);\n\n  return (\n    <Next5DaysSection>\n      <Next5DaysList>\n        {next5Days?.map((day) => {\n          return (\n            <WeatherCard\n              key={day.Date}\n              day={getDayOfWeek(day.Date)}\n              temperature={formatTemperature(day.Temperature)}\n              weatherText={{\n                byDay: day.Day.IconPhrase,\n                byNight: day.Night.IconPhrase,\n              }}\n            />\n          );\n        })}\n      </Next5DaysList>\n    </Next5DaysSection>\n  );\n}\n\nfunction formatTemperature(temperature) {\n  const min = temperature.Minimum;\n  const max = temperature.Maximum;\n  return {\n    minimum: min.Unit === 'F' ? convertToC(min.Value) : min.Value,\n    maximum: max.Unit === 'F' ? convertToC(max.Value) : max.Value,\n  };\n}\n\nfunction convertToC(F) {\n  return ((F - 32) * (5 / 9)).toFixed(1);\n}\n\nfunction getDayOfWeek(date) {\n  const dayOfWeek = new Date(date).getDay();\n  return isNaN(dayOfWeek)\n    ? null\n    : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][dayOfWeek];\n}\n\nexport default Next5Days;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  favorites: [],\n};\n\nexport const favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    changeFavorites: (state, action) => {\n      state.favorites = action.payload;\n    },\n    addFavorite: (state, action) => {\n      console.log(state);\n      if (\n        state.favorites.find(\n          (item) => item.location.id === action.payload.location.id,\n        )\n      )\n        return;\n\n      state.favorites.unshift(action.payload);\n    },\n    deleteFavorite: (state, action) => {\n      state.favorites = state.favorites.filter(\n        (item) => item.location.id !== action.payload.location.id,\n      );\n    },\n    updateFavorites: (state, action) => {\n      if (!Array.isArray(action.payload)) {\n        return (state.favorites = updateOneFavorite(\n          action.payload,\n          state.favorites,\n        ));\n      }\n\n      const ids = state.favorites.map((item) => item.location.id);\n      const relevantPayload = action.payload.filter((item) =>\n        ids.includes(item.location.id),\n      );\n\n      for (let item of relevantPayload) {\n        updateOneFavorite(item, state.favorites);\n      }\n    },\n  },\n});\n\nfunction updateOneFavorite(payload, favorites) {\n  return favorites.map((item) => {\n    if (item.location.id === payload.location.id) return payload;\n\n    return item;\n  });\n}\n\nexport const {\n  changeFavorites,\n  addFavorite,\n  deleteFavorite,\n  updateFavorites,\n  isFavorite,\n} = favoritesSlice.actions;\n\nexport const selectFavorites = (state) => {\n  return state.favorites.favorites;\n};\n\nexport default favoritesSlice.reducer;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectWeather } from '../../app/WeatherSlice';\nimport { Button } from '../../shared.styles';\nimport {\n  SearchResultsHeader,\n  SelectedResult,\n  SelectedResultCard,\n} from './SearchResults.styles';\nimport { useDispatch } from 'react-redux';\nimport {\n  addFavorite,\n  deleteFavorite,\n  selectFavorites,\n} from '../../app/FavoritesSlice';\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const weather = useSelector(selectWeather);\n  const favorites = useSelector(selectFavorites);\n  const [isInFavorite, setIsInFavorite] = useState(\n    favorites.find((item) => item.location.id === weather.location.id),\n  );\n\n  useEffect(() => {\n    setIsInFavorite(\n      favorites.find((item) => item.location.id === weather.location.id),\n    );\n  }, [weather, favorites]);\n\n  return (\n    <SearchResultsHeader>\n      <SelectedResult>\n        <SelectedResultCard>\n          <img\n            src='https://img.icons8.com/color/96/000000/weather-forecast.png'\n            alt='Weather'\n            style={{ marginRight: '3rem' }}\n          />\n          <div>\n            <h3>{weather.location?.name}</h3>\n            <span>{weather.currentWeather?.temperature}'C</span>\n          </div>\n        </SelectedResultCard>\n        <h1>{weather.currentWeather?.weatherText}</h1>\n        <div>\n          {isInFavorite ? (\n            <Button\n              onClick={() => {\n                setIsInFavorite(false);\n                dispatch(deleteFavorite(weather));\n              }}\n            >\n              Remove from Favorites\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                setIsInFavorite(true);\n                dispatch(addFavorite(weather));\n              }}\n            >\n              Add to Favorites\n            </Button>\n          )}\n        </div>\n      </SelectedResult>\n    </SearchResultsHeader>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { SearchResultsWrapper } from './SearchResults.styles';\nimport Next5Days from './Next5Days';\nimport Header from './Header';\n\nfunction SearchResults() {\n  return (\n    <SearchResultsWrapper>\n      <Header />\n      <Next5Days />\n    </SearchResultsWrapper>\n  );\n}\n\nexport default SearchResults;\n","import styled from 'styled-components';\n\nexport const CardsList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style-type: none;\n  flex-wrap: wrap;\n`;\n\nexport const Card = styled.li`\n  padding: 1rem;\n  border-radius: 3px;\n  background-color: #7b57ae;\n  color: #eaeaff;\n  text-align: center;\n  margin-bottom: 1rem;\n  min-width: calc(20% - 4rem);\n`;\n\nexport const Title = styled.h2``;\n\nexport const PageTitle = styled.h1`\n  font-size: 3rem;\n  text-align: center;\n  color: #673a9f;\n  width: 100%;\n`;\n","import React from 'react';\nimport { Title, Card as FavoritesCard } from './Favorites.styles';\n\nfunction Card({ place, temperature, weatherText }) {\n  return (\n    <FavoritesCard>\n      <Title>{place}</Title>\n      <p>{temperature}'C</p>\n      <p>{weatherText}</p>\n    </FavoritesCard>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFavorites } from '../../app/FavoritesSlice';\nimport Card from './Card';\nimport { CardsList, PageTitle } from './Favorites.styles';\nimport { Container } from '../../shared.styles';\n\nfunction Favorites() {\n  const favorites = useSelector(selectFavorites);\n\n  return (\n    <Container>\n      <PageTitle>\n        {favorites.length ? 'Favorites' : 'There are no favorite cities yet!'}\n      </PageTitle>\n      <CardsList>\n        {favorites.map((favorite) => {\n          return (\n            <Card\n              place={favorite.location.name}\n              temperature={favorite.currentWeather.temperature}\n              weatherText={favorite.currentWeather.weatherText}\n            />\n          );\n        })}\n      </CardsList>\n    </Container>\n  );\n}\n\nexport default Favorites;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Search from './components/Search/Search';\nimport Error from './components/Error/Error';\nimport SearchResults from './components/SearchResults/SearchResults';\nimport Favorites from './components/Favorites/Favorites';\nimport {\n  fetchNext5DaysWeather,\n  fetchCurrentWeather,\n} from './components/Search/SearchAPI';\nimport { useDispatch } from 'react-redux';\nimport {\n  changeLocation,\n  changeNext5Days,\n  changeCurrentWeather,\n} from './app/WeatherSlice';\n\nfunction App() {\n  const [error, setError] = useState([]);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  function handleError(err) {\n    setError([...error, err.message]);\n    console.log(err, error);\n    setTimeout(() => {\n      setError([]);\n    }, 10000);\n  }\n\n  async function getWeather() {\n    try {\n      const next5Days = await fetchNext5DaysWeather(215854);\n      const currentWeather = await fetchCurrentWeather(215854);\n\n      dispatch(changeLocation({ id: 215854, name: 'Tel Aviv' }));\n      dispatch(changeNext5Days(next5Days));\n      dispatch(changeCurrentWeather(currentWeather));\n    } catch (err) {\n      handleError(err);\n    }\n  }\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path='/favorites'>\n          <Favorites />\n        </Route>\n        <Route exact path='/'>\n          <Search errorHandler={handleError} />\n          {error && <Error errors={error} />}\n          <SearchResults />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport weatherReducer from './WeatherSlice';\nimport favoritesReducer from './FavoritesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    weather: weatherReducer,\n    favorites: favoritesReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}